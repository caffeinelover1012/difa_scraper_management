"""
Django settings for difa_scraper_management project.

Generated by 'django-admin startproject' using Django 4.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
import os
import environ

env = environ.Env(
    # set casting, default value
    DEBUG=(bool, False)
)

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Take environment variables from .env file
environ.Env.read_env(os.path.join(BASE_DIR, '.env'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env('DEBUG')
PROD = env('PROD')
ALLOWED_HOSTS = []
ALLOWED_HOSTS.extend(
    filter(
        None,
        env('ALLOWED_HOSTS',default='').split(','),
    )
)

# Application definition
INSTALLED_APPS = [
    'rest_framework',
    'datasets',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'widget_tweaks',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# Prod safety configs
CSRF_TRUSTED_ORIGINS = ['https://www.dataifa.org']
CSRF_COOKIE_SECURE = True
CSRF_COOKIE_DOMAIN = ".dataifa.org"
SESSION_COOKIE_SECURE = True
SECURE_BROWSER_XSS_FILTER = True
# X_FRAME_OPTIONS = 'SAME-ORIGIN'
SECURE_CONTENT_TYPE_NOSNIFF = True
# SECURE_SSL_REDIRECT = True
USE_X_FORWARDED_HOST = True
# SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

ROOT_URLCONF = env('ROOT_URLCONF')
LOGIN_URL = 'login'
TEMPLATES = [ 
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'datasets' / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'datasets.context_processors.persons',
            ],
        },
    },
]

WSGI_APPLICATION = 'difa_scraper_management.wsgi.application'
AUTH_USER_MODEL = 'datasets.User'

# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases
if PROD:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql_psycopg2',
            'NAME': env("DB_NAME"),
            'USER': env("DB_USER"),
            'PASSWORD': env("DB_PASSWORD"),
            'HOST': env("DB_HOST"),
            'PORT': env("DB_PORT"),
        }
    }
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }
    
# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_DIRS = [
    BASE_DIR / 'datasets' / 'static',
]

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
    ]
}

	
LOGGING = {	
    "version": 1,	
    "disable_existing_loggers": False,	
    "formatters": {	
        "verbose": {	
            "format": "{levelname} {asctime} {module} {process:d} {thread:d} {message}",	
            "style": "{",	
        },	
    },	
    "filters": {	
        "require_debug_true": {	
            "()": "django.utils.log.RequireDebugTrue",	
        },	
    },	
    "handlers": {	
        "file": {	
            "level": "INFO",	
            "class": "logging.FileHandler",	
            "filename": "ds.log",  
            "formatter": "verbose",	
        },	
        "console": {	
            "level": "INFO",	
            "filters": ["require_debug_true"],	
            "class": "logging.StreamHandler",	
            "formatter": "verbose",	
        },	
        "mail_admins": {	
            "level": "ERROR",	
            "class": "django.utils.log.AdminEmailHandler",	
            "formatter": "verbose",	
        },	
    },	
    "loggers": {	
        "django": {	
            "handlers": ["console", "file"],	
            "propagate": True,	
        },	
        "django.request": {	
            "handlers": ["mail_admins"],	
            "level": "ERROR",	
            "propagate": False,	
        },	
        "datasets": {	
            "handlers": ["console", "mail_admins", "file"],	
            "level": "INFO",	
        },	
    },	
}